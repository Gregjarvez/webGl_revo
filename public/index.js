import Sphere from './Mesh/sphere.js';import Plane from './Mesh/plane.js';import BoxGrid from './Mesh/grid.js';import SpotLight from './Mesh/spotlight.js';import Ambient from './Mesh/ambient.js';const { innerWidth, innerHeight } = window;function init() {  const gui = new dat.GUI();  const scene = new THREE.Scene();  const renderer = new THREE.WebGLRenderer();  renderer.setSize(innerWidth, innerHeight);  renderer.shadowMap.enabled = true;  renderer.shadowMap.type = THREE.PCFSoftShadowMap;  document      .querySelector('.app')      .appendChild(renderer.domElement);  const camera = new THREE.PerspectiveCamera(      75, innerWidth / innerHeight, 1, 1000  );  new THREE.OrbitControls(camera, renderer.domElement);  const boxGrid = BoxGrid(10, 1.5);  const plane = Plane(20, 20);  const sphere = Sphere(0.5);  const spotlight = SpotLight(1);  const ambient = Ambient(1);  const timeElapse = new THREE.Clock(true);  camera.position.set(5, 10, 10);  camera.lookAt(new THREE.Vector3(0, 0, 0));  plane.rotation.x = Math.PI / 2;  boxGrid.name = 'box-grid';  spotlight.position.x = 13;  spotlight.position.y = 10;  spotlight.position.z = 10;  spotlight.intensity = 2;  gui.add(spotlight, 'intensity', 0, 7);  gui.add(spotlight.position, 'x', -10, 10);  gui.add(spotlight.position, 'y', 0, 10);  spotlight.add(sphere);  scene.add(boxGrid);  scene.add(plane);  scene.add(spotlight);  scene.add(ambient);  renderer.render = renderer.render.bind(renderer)  loop(      renderer,      scene,      camera,      timeElapse      );}function loop(renderer, scene, camera, timeElapse) {  renderer.render(      scene,      camera  );  renderer.setClearColor('#073B4C');  const grid = scene.getObjectByName('box-grid');  grid.children.forEach((box) => {    box.rotation.x += 0.01;    box.rotation.y += 0.01;  });  requestAnimationFrame(function (){    loop(renderer, scene, camera, timeElapse)  });}init();